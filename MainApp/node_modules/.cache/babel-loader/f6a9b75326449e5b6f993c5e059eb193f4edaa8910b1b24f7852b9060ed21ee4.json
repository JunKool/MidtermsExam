{"ast":null,"code":"var _jsxFileName = \"/Users/scheundt/NodeJS_Projects/TS_ReactTemplate/src/components/OfferSearch.tsx\",\n  _s = $RefreshSig$();\n// UserSearch.tsx\nimport React, { useState, useEffect } from 'react';\nimport { offerServiceApi } from '../services/OfferService';\nimport Table from './Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OfferSearch = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [offers, setOffers] = useState([]);\n  useEffect(() => {\n    offerServiceApi.getAllOffers().then(response => {\n      setOffers(response.data);\n    }).catch(error => {\n      console.error('Error fetching users:', error);\n    });\n  }, []);\n  const handleSearch = () => {\n    // Implement the search logic based on first name, last name, or country\n    // For simplicity, let's perform a case-insensitive search on any matching field\n    const results = offers.filter(offer => offer.name.toLowerCase().includes(searchTerm.toLowerCase()) || offer.code.toLowerCase().includes(searchTerm.toLowerCase()) || offer.value.toLowerCase().includes(searchTerm.toLowerCase()));\n    setSearchResults(results);\n  };\n  const tableColumns = [{\n    key: 'id',\n    label: 'ID'\n  }, {\n    key: 'name',\n    label: 'Name'\n  }, {\n    key: 'code',\n    label: 'Code'\n  }, {\n    key: 'value',\n    label: 'Value'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Offer Search:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Search Term:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: tableColumns,\n      data: searchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(OfferSearch, \"8V6qxeYINnxxghuBXdqgAoOmPgU=\");\n_c = OfferSearch;\nexport default OfferSearch;\nvar _c;\n$RefreshReg$(_c, \"OfferSearch\");","map":{"version":3,"names":["React","useState","useEffect","offerServiceApi","Table","jsxDEV","_jsxDEV","OfferSearch","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","offers","setOffers","getAllOffers","then","response","data","catch","error","console","handleSearch","results","filter","offer","name","toLowerCase","includes","code","value","tableColumns","key","label","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","onClick","columns","_c","$RefreshReg$"],"sources":["/Users/scheundt/NodeJS_Projects/TS_ReactTemplate/src/components/OfferSearch.tsx"],"sourcesContent":["// UserSearch.tsx\nimport React, { useState , useEffect } from 'react';\nimport { offerServiceApi } from '../services/OfferService';\nimport Table from './Table';\nimport { OfferModel } from '../models/OfferModel';\n\nconst OfferSearch: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [searchResults, setSearchResults] = useState<OfferModel[]>([]);\n  const [offers, setOffers] = useState<OfferModel[]>([]);\n\n  useEffect(() => {\n    offerServiceApi.getAllOffers()\n      .then((response) => {\n        setOffers(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching users:', error);\n      });\n  }, []);\n  const handleSearch = () => {\n    // Implement the search logic based on first name, last name, or country\n    // For simplicity, let's perform a case-insensitive search on any matching field\n    const results = offers.filter(offer =>\n      offer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      offer.code.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      offer.value.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setSearchResults(results);\n  };\n\n  const tableColumns = [\n    { key: 'id', label: 'ID' },\n    { key: 'name', label: 'Name' },\n    { key: 'code', label: 'Code' },\n    { key: 'value', label: 'Value' },\n  ];\n\n  return (\n    <div>\n      <h2>Offer Search:</h2>\n      <form>\n        <label>\n          Search Term:\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </label>\n        <button type=\"button\" onClick={handleSearch}>Search</button>\n      </form>\n      <Table columns={tableColumns} data={searchResults} />\n    </div>\n  );\n};\n\nexport default OfferSearch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}