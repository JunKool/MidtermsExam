{"ast":null,"code":"var _jsxFileName = \"/Users/scheundt/NodeJS_Projects/TS_ReactTemplate/src/components/UserSearch.tsx\",\n  _s = $RefreshSig$();\n// UserSearch.tsx\nimport React, { useState } from 'react';\nimport Table from './Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserSearch = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const handleSearch = () => {\n    // Implement the search logic based on first name, last name, or country\n    // For simplicity, let's perform a case-insensitive search on any matching field\n    const results = users.filter(user => user.firstname.toLowerCase().includes(searchTerm.toLowerCase()) || user.lastname.toLowerCase().includes(searchTerm.toLowerCase()) || user.country.toLowerCase().includes(searchTerm.toLowerCase()));\n    setSearchResults(results);\n  };\n  const tableColumns = [{\n    key: 'id',\n    label: 'ID'\n  }, {\n    key: 'firstname',\n    label: 'First Name'\n  }, {\n    key: 'lastname',\n    label: 'Last Name'\n  }, {\n    key: 'street',\n    label: 'Street'\n  }, {\n    key: 'country',\n    label: 'Country'\n  }, {\n    key: 'isMarketingSent',\n    label: 'Marketing Sent'\n  }, {\n    key: 'marketingDateSent',\n    label: 'Marketing Date Sent'\n  }, {\n    key: 'emailAddress',\n    label: 'Email Address'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Search:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Search Term:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: tableColumns,\n      data: searchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(UserSearch, \"brRzk7tj+pGuNPv2srA2r/nQjm0=\");\n_c = UserSearch;\nexport default UserSearch;\nvar _c;\n$RefreshReg$(_c, \"UserSearch\");","map":{"version":3,"names":["React","useState","Table","jsxDEV","_jsxDEV","UserSearch","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","handleSearch","results","users","filter","user","firstname","toLowerCase","includes","lastname","country","tableColumns","key","label","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","columns","data","_c","$RefreshReg$"],"sources":["/Users/scheundt/NodeJS_Projects/TS_ReactTemplate/src/components/UserSearch.tsx"],"sourcesContent":["// UserSearch.tsx\nimport React, { useState } from 'react';\nimport Table from './Table';\nimport { UserModel } from '../models/UserModel';\n\nconst UserSearch: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [searchResults, setSearchResults] = useState<UserModel[]>([]);\n\n  const handleSearch = () => {\n    // Implement the search logic based on first name, last name, or country\n    // For simplicity, let's perform a case-insensitive search on any matching field\n    const results = users.filter(user =>\n      user.firstname.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      user.lastname.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      user.country.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setSearchResults(results);\n  };\n\n  const tableColumns = [\n    { key: 'id', label: 'ID' },\n    { key: 'firstname', label: 'First Name' },\n    { key: 'lastname', label: 'Last Name' },\n    { key: 'street', label: 'Street' },\n    { key: 'country', label: 'Country' },\n    { key: 'isMarketingSent', label: 'Marketing Sent' },\n    { key: 'marketingDateSent', label: 'Marketing Date Sent' },\n    { key: 'emailAddress', label: 'Email Address' },\n  ];\n\n  return (\n    <div>\n      <h2>User Search:</h2>\n      <form>\n        <label>\n          Search Term:\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </label>\n        <button type=\"button\" onClick={handleSearch}>Search</button>\n      </form>\n      <Table columns={tableColumns} data={searchResults} />\n    </div>\n  );\n};\n\nexport default UserSearch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}