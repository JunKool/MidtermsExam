{"ast":null,"code":"var _jsxFileName = \"/Users/scheundt/NodeJS_Projects/TS_ReactTemplate/src/components/EmailLogViewer.tsx\",\n  _s = $RefreshSig$();\n// EmailLogViewer.tsx\nimport React, { useState, useEffect } from 'react';\nimport { emailServiceApi } from '../services/EmailService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailLogViewer = () => {\n  _s();\n  const [emailLog, setEmailLog] = useState(emailServiceApi.getEmailLogJournal());\n  const [frequency, setFrequency] = useState(1); // Default frequency: every 1 minute\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      // Simulate fetching the updated email log periodically\n      setEmailLog(emailServiceApi.getEmailLogJournal());\n    }, frequency * 60000); // Convert minutes to milliseconds\n\n    return () => clearInterval(intervalId); // Cleanup on component unmount\n  }, [frequency]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email Log Viewer:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Frequency (minutes):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: frequency,\n        onChange: e => setFrequency(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Offers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sent Date/Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: emailLog.map((logEntry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: logEntry.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: logEntry.offers.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: logEntry.sentDateTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: logEntry.success ? 'Yes' : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailLogViewer, \"62hsdpacOKIW2SyAXV9i1pcf2yU=\");\n_c = EmailLogViewer;\nexport default EmailLogViewer;\nvar _c;\n$RefreshReg$(_c, \"EmailLogViewer\");","map":{"version":3,"names":["React","useState","useEffect","emailServiceApi","jsxDEV","_jsxDEV","EmailLogViewer","_s","emailLog","setEmailLog","getEmailLogJournal","frequency","setFrequency","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","Number","target","map","logEntry","index","user","offers","join","sentDateTime","success","_c","$RefreshReg$"],"sources":["/Users/scheundt/NodeJS_Projects/TS_ReactTemplate/src/components/EmailLogViewer.tsx"],"sourcesContent":["// EmailLogViewer.tsx\nimport React, { useState, useEffect } from 'react';\nimport { emailServiceApi } from '../services/EmailService';\n\nconst EmailLogViewer: React.FC = () => {\n  const [emailLog, setEmailLog] = useState(emailServiceApi.getEmailLogJournal());\n  const [frequency, setFrequency] = useState<number>(1); // Default frequency: every 1 minute\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      // Simulate fetching the updated email log periodically\n      setEmailLog(emailServiceApi.getEmailLogJournal());\n    }, frequency * 60000); // Convert minutes to milliseconds\n\n    return () => clearInterval(intervalId); // Cleanup on component unmount\n  }, [frequency]);\n\n  return (\n    <div>\n      <h2>Email Log Viewer:</h2>\n      <label>\n        Frequency (minutes):\n        <input\n          type=\"number\"\n          value={frequency}\n          onChange={(e) => setFrequency(Number(e.target.value))}\n        />\n      </label>\n      <table>\n        <thead>\n          <tr>\n            <th>User</th>\n            <th>Offers</th>\n            <th>Sent Date/Time</th>\n            <th>Success</th>\n          </tr>\n        </thead>\n        <tbody>\n          {emailLog.map((logEntry, index) => (\n            <tr key={index}>\n              <td>{logEntry.user}</td>\n              <td>{logEntry.offers.join(', ')}</td>\n              <td>{logEntry.sentDateTime}</td>\n              <td>{logEntry.success ? 'Yes' : 'No'}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default EmailLogViewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}