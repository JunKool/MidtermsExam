{"ast":null,"code":"// UserService.ts\nimport axios from 'axios';\n// Adjust the path accordingly\n\nconst baseURL = 'https://6523fbffea560a22a4e92f9e.mockapi.io/se2132';\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\nconst userService = axios.create({\n  baseURL: `${baseURL}/getUsers`,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n    'Access-Control-Allow-Headers': \"append,delete,entries,foreach,get,has,keys,set,values,Authorization\"\n  }\n});\nexport const userServiceApi = {\n  getAllUsers: () => userService.get('/'),\n  getUserById: id => userService.get(`/${id}`),\n  createUser: user => userService.post('/', user),\n  updateUser: (id, user) => userService.put(`/${id}`, user),\n  deleteUser: id => userService.delete(`/${id}`)\n};","map":{"version":3,"names":["axios","baseURL","defaults","headers","common","userService","create","withCredentials","userServiceApi","getAllUsers","get","getUserById","id","createUser","user","post","updateUser","put","deleteUser","delete"],"sources":["/Users/scheundt/NodeJS_Projects/TS_ReactTemplate/src/services/UserService.ts"],"sourcesContent":["// UserService.ts\nimport axios from 'axios';\nimport { UserModel } from '../models/UserModel'; // Adjust the path accordingly\n\nconst baseURL = 'https://6523fbffea560a22a4e92f9e.mockapi.io/se2132';\n\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*'\n\n\nconst userService = axios.create({\n  baseURL: `${baseURL}/getUsers`,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n    'Access-Control-Allow-Headers': \"append,delete,entries,foreach,get,has,keys,set,values,Authorization\",\n  }\n});\n\nexport const userServiceApi = {\n  getAllUsers: () => userService.get<UserModel[]>('/'),\n  getUserById: (id: string) => userService.get<UserModel>(`/${id}`),\n  createUser: (user: UserModel) => userService.post<UserModel>('/', user),\n  updateUser: (id: string, user: UserModel) => userService.put<UserModel>(`/${id}`, user),\n  deleteUser: (id: string) => userService.delete(`/${id}`),\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACwB;;AAEjD,MAAMC,OAAO,GAAG,oDAAoD;AAEpED,KAAK,CAACE,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,kBAAkB,CAAC,GAAG,gBAAgB;AACpEJ,KAAK,CAACE,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,6BAA6B,CAAC,GAAG,GAAG;AAGlE,MAAMC,WAAW,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC/BL,OAAO,EAAG,GAAEA,OAAQ,WAAU;EAC9BM,eAAe,EAAE,IAAI;EACrBJ,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,8BAA8B,EAAE,mCAAmC;IACnE,8BAA8B,EAAE;EAClC;AACF,CAAC,CAAC;AAEF,OAAO,MAAMK,cAAc,GAAG;EAC5BC,WAAW,EAAEA,CAAA,KAAMJ,WAAW,CAACK,GAAG,CAAc,GAAG,CAAC;EACpDC,WAAW,EAAGC,EAAU,IAAKP,WAAW,CAACK,GAAG,CAAa,IAAGE,EAAG,EAAC,CAAC;EACjEC,UAAU,EAAGC,IAAe,IAAKT,WAAW,CAACU,IAAI,CAAY,GAAG,EAAED,IAAI,CAAC;EACvEE,UAAU,EAAEA,CAACJ,EAAU,EAAEE,IAAe,KAAKT,WAAW,CAACY,GAAG,CAAa,IAAGL,EAAG,EAAC,EAAEE,IAAI,CAAC;EACvFI,UAAU,EAAGN,EAAU,IAAKP,WAAW,CAACc,MAAM,CAAE,IAAGP,EAAG,EAAC;AACzD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}