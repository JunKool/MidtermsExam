{"ast":null,"code":"// MarketingService.ts\n\nconst inMemoryUserOfferRelationships = [];\nexport const marketingServiceApi = {\n  getAllUserOfferRelationships: () => inMemoryUserOfferRelationships,\n  searchUserOfferRelationships: searchTerm => inMemoryUserOfferRelationships.filter(relationship => relationship.userId.includes(searchTerm)),\n  assignUserOffers: (userId, offerIds) => {\n    // Check if a relationship already exists for the user\n    const existingRelationshipIndex = inMemoryUserOfferRelationships.findIndex(relationship => relationship.userId === userId);\n    if (existingRelationshipIndex !== -1) {\n      // Update the existing relationship\n      inMemoryUserOfferRelationships[existingRelationshipIndex].offerIds = offerIds;\n    } else {\n      // Create a new relationship\n      inMemoryUserOfferRelationships.push({\n        userId,\n        offerIds\n      });\n    }\n  }\n};","map":{"version":3,"names":["inMemoryUserOfferRelationships","marketingServiceApi","getAllUserOfferRelationships","searchUserOfferRelationships","searchTerm","filter","relationship","userId","includes","assignUserOffers","offerIds","existingRelationshipIndex","findIndex","push"],"sources":["/Users/scheundt/NodeJS_Projects/TS_ReactTemplate/src/services/MarketingService.ts"],"sourcesContent":["// MarketingService.ts\ninterface UserOfferRelationship {\n    userId: string;\n    offerIds: string[];\n  }\n  \n  const inMemoryUserOfferRelationships: UserOfferRelationship[] = [];\n  \n  export const marketingServiceApi = {\n    getAllUserOfferRelationships: () => inMemoryUserOfferRelationships,\n    searchUserOfferRelationships: (searchTerm: string) =>\n      inMemoryUserOfferRelationships.filter((relationship) =>\n        relationship.userId.includes(searchTerm)\n      ),\n    assignUserOffers: (userId: string, offerIds: string[]) => {\n      // Check if a relationship already exists for the user\n      const existingRelationshipIndex = inMemoryUserOfferRelationships.findIndex(\n        (relationship) => relationship.userId === userId\n      );\n  \n      if (existingRelationshipIndex !== -1) {\n        // Update the existing relationship\n        inMemoryUserOfferRelationships[existingRelationshipIndex].offerIds = offerIds;\n      } else {\n        // Create a new relationship\n        inMemoryUserOfferRelationships.push({ userId, offerIds });\n      }\n    },\n  };\n  "],"mappings":"AAAA;;AAME,MAAMA,8BAAuD,GAAG,EAAE;AAElE,OAAO,MAAMC,mBAAmB,GAAG;EACjCC,4BAA4B,EAAEA,CAAA,KAAMF,8BAA8B;EAClEG,4BAA4B,EAAGC,UAAkB,IAC/CJ,8BAA8B,CAACK,MAAM,CAAEC,YAAY,IACjDA,YAAY,CAACC,MAAM,CAACC,QAAQ,CAACJ,UAAU,CACzC,CAAC;EACHK,gBAAgB,EAAEA,CAACF,MAAc,EAAEG,QAAkB,KAAK;IACxD;IACA,MAAMC,yBAAyB,GAAGX,8BAA8B,CAACY,SAAS,CACvEN,YAAY,IAAKA,YAAY,CAACC,MAAM,KAAKA,MAC5C,CAAC;IAED,IAAII,yBAAyB,KAAK,CAAC,CAAC,EAAE;MACpC;MACAX,8BAA8B,CAACW,yBAAyB,CAAC,CAACD,QAAQ,GAAGA,QAAQ;IAC/E,CAAC,MAAM;MACL;MACAV,8BAA8B,CAACa,IAAI,CAAC;QAAEN,MAAM;QAAEG;MAAS,CAAC,CAAC;IAC3D;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}