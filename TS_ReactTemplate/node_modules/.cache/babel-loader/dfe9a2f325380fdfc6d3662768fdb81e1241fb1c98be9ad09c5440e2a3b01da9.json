{"ast":null,"code":"var _jsxFileName = \"/Users/scheundt/NodeJS_Projects/TS_ReactTemplate/src/components/MarketingAssign.tsx\",\n  _s = $RefreshSig$();\n// MarketingAssign.tsx\nimport React, { useState } from 'react';\nimport { marketingServiceApi } from '../services/MarketingService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarketingAssign = () => {\n  _s();\n  const [selectedUser, setSelectedUser] = useState('');\n  const [selectedOffers, setSelectedOffers] = useState([]);\n  // Mock data for available offers (replace with actual data)\n  const availableOffers = ['Offer1', 'Offer2', 'Offer3'];\n  const handleAssign = () => {\n    // Call the marketingServiceApi to assign offers to the selected user\n    marketingServiceApi.assignUserOffers(selectedUser, selectedOffers);\n    // Reset the form\n    setSelectedUser('');\n    setSelectedOffers([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Marketing Assign:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select User:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: selectedUser,\n          onChange: e => setSelectedUser(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Offers:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          multiple: true,\n          value: selectedOffers,\n          onChange: e => setSelectedOffers(Array.from(e.target.selectedOptions, option => option.value)),\n          children: availableOffers.map(offer => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: offer,\n            children: offer\n          }, offer, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAssign,\n        children: \"Assign Offers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(MarketingAssign, \"rSdbPZZKXShqv7ypBlpsMr2ccpQ=\");\n_c = MarketingAssign;\nexport default MarketingAssign;\nvar _c;\n$RefreshReg$(_c, \"MarketingAssign\");","map":{"version":3,"names":["React","useState","marketingServiceApi","jsxDEV","_jsxDEV","MarketingAssign","_s","selectedUser","setSelectedUser","selectedOffers","setSelectedOffers","availableOffers","handleAssign","assignUserOffers","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","multiple","Array","from","selectedOptions","option","map","offer","onClick","_c","$RefreshReg$"],"sources":["/Users/scheundt/NodeJS_Projects/TS_ReactTemplate/src/components/MarketingAssign.tsx"],"sourcesContent":["// MarketingAssign.tsx\nimport React, { useState } from 'react';\nimport { marketingServiceApi } from '../services/MarketingService';\n\nconst MarketingAssign: React.FC = () => {\n  const [selectedUser, setSelectedUser] = useState<string>('');\n  const [selectedOffers, setSelectedOffers] = useState<string[]>([]);\n  // Mock data for available offers (replace with actual data)\n  const availableOffers = ['Offer1', 'Offer2', 'Offer3'];\n\n  const handleAssign = () => {\n    // Call the marketingServiceApi to assign offers to the selected user\n    marketingServiceApi.assignUserOffers(selectedUser, selectedOffers);\n    // Reset the form\n    setSelectedUser('');\n    setSelectedOffers([]);\n  };\n\n  return (\n    <div>\n      <h2>Marketing Assign:</h2>\n      <form>\n        <label>\n          Select User:\n          <input\n            type=\"text\"\n            value={selectedUser}\n            onChange={(e) => setSelectedUser(e.target.value)}\n          />\n        </label>\n        <label>\n          Select Offers:\n          <select\n            multiple\n            value={selectedOffers}\n            onChange={(e) => setSelectedOffers(Array.from(e.target.selectedOptions, (option) => option.value))}\n          >\n            {availableOffers.map((offer) => (\n              <option key={offer} value={offer}>\n                {offer}\n              </option>\n            ))}\n          </select>\n        </label>\n        <button type=\"button\" onClick={handleAssign}>\n          Assign Offers\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default MarketingAssign;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAC5D,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAW,EAAE,CAAC;EAClE;EACA,MAAMU,eAAe,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;EAEtD,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAV,mBAAmB,CAACW,gBAAgB,CAACN,YAAY,EAAEE,cAAc,CAAC;IAClE;IACAD,eAAe,CAAC,EAAE,CAAC;IACnBE,iBAAiB,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,oBACEN,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bd,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,GAAO,cAEL,eAAAV,OAAA;UACEe,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEb,YAAa;UACpBc,QAAQ,EAAGC,CAAC,IAAKd,eAAe,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRd,OAAA;QAAAU,QAAA,GAAO,gBAEL,eAAAV,OAAA;UACEoB,QAAQ;UACRJ,KAAK,EAAEX,cAAe;UACtBY,QAAQ,EAAGC,CAAC,IAAKZ,iBAAiB,CAACe,KAAK,CAACC,IAAI,CAACJ,CAAC,CAACC,MAAM,CAACI,eAAe,EAAGC,MAAM,IAAKA,MAAM,CAACR,KAAK,CAAC,CAAE;UAAAN,QAAA,EAElGH,eAAe,CAACkB,GAAG,CAAEC,KAAK,iBACzB1B,OAAA;YAAoBgB,KAAK,EAAEU,KAAM;YAAAhB,QAAA,EAC9BgB;UAAK,GADKA,KAAK;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACRd,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAACY,OAAO,EAAEnB,YAAa;QAAAE,QAAA,EAAC;MAE7C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACZ,EAAA,CA9CID,eAAyB;AAAA2B,EAAA,GAAzB3B,eAAyB;AAgD/B,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}