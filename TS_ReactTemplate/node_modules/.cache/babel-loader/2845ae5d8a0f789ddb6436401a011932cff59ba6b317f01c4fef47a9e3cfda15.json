{"ast":null,"code":"var _jsxFileName = \"/Users/scheundt/NodeJS_Projects/TS_ReactTemplate/src/components/MarketingAssign.tsx\",\n  _s = $RefreshSig$();\n// MarketingAssign.tsx\nimport React, { useState, useEffect } from 'react';\nimport { userServiceApi } from '../services/UserService'; // Import user service\nimport { offerServiceApi } from '../services/OfferService'; // Import offer service\nimport { marketingServiceApi } from '../services/MarketingService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarketingAssign = () => {\n  _s();\n  const [selectedUser, setSelectedUser] = useState('');\n  const [selectedOffers, setSelectedOffers] = useState([]);\n  const [availableUsers, setAvailableUsers] = useState([]);\n  const [availableOffers, setAvailableOffers] = useState([]);\n\n  // Fetch available users\n  useEffect(() => {\n    userServiceApi.getAllUsers().then(response => {\n      setAvailableUsers(response.data);\n    }).catch(error => {\n      console.error('Error fetching users:', error);\n    });\n  }, []);\n\n  // Fetch available offers\n  useEffect(() => {\n    offerServiceApi.getAllOffers().then(response => {\n      setAvailableOffers(response.data);\n    }).catch(error => {\n      console.error('Error fetching offers:', error);\n    });\n  }, []);\n  const handleAssign = () => {\n    // Call the marketingServiceApi to assign offers to the selected user\n    marketingServiceApi.assignUserOffers(selectedUser, selectedOffers);\n    // Reset the form\n    setSelectedUser('');\n    setSelectedOffers([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Marketing Assign:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select User:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: selectedUser,\n          onChange: e => setSelectedUser(e.target.value),\n          list: \"usersList\" // Connect input to the datalist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"usersList\",\n          children: availableUsers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: '${user.firstname} ${user.lastname}'\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Offers:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          multiple: true,\n          value: selectedOffers,\n          onChange: e => setSelectedOffers(Array.from(e.target.selectedOptions, option => option.value)),\n          children: availableOffers.map(offer => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: '${offer.name} ${offer.value}'\n          }, offer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAssign,\n        children: \"Assign Offers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(MarketingAssign, \"3La/QId7HG3IA1zhbQ6t25NDLns=\");\n_c = MarketingAssign;\nexport default MarketingAssign;\nvar _c;\n$RefreshReg$(_c, \"MarketingAssign\");","map":{"version":3,"names":["React","useState","useEffect","userServiceApi","offerServiceApi","marketingServiceApi","jsxDEV","_jsxDEV","MarketingAssign","_s","selectedUser","setSelectedUser","selectedOffers","setSelectedOffers","availableUsers","setAvailableUsers","availableOffers","setAvailableOffers","getAllUsers","then","response","data","catch","error","console","getAllOffers","handleAssign","assignUserOffers","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","list","id","map","user","multiple","Array","from","selectedOptions","option","offer","onClick","_c","$RefreshReg$"],"sources":["/Users/scheundt/NodeJS_Projects/TS_ReactTemplate/src/components/MarketingAssign.tsx"],"sourcesContent":["// MarketingAssign.tsx\nimport React, { useState, useEffect } from 'react';\nimport { userServiceApi } from '../services/UserService'; // Import user service\nimport { offerServiceApi } from '../services/OfferService'; // Import offer service\nimport { marketingServiceApi } from '../services/MarketingService';\nimport UserModel from '../models/UserModel';\nimport { OfferModel } from '../models/OfferModel';\n\nconst MarketingAssign: React.FC = () => {\n  const [selectedUser, setSelectedUser] = useState<string>('');\n  const [selectedOffers, setSelectedOffers] = useState<string[]>([]);\n  const [availableUsers, setAvailableUsers] = useState<UserModel[]>([]);\n  const [availableOffers, setAvailableOffers] = useState<OfferModel[]>([]);\n\n  // Fetch available users\n  useEffect(() => {\n    userServiceApi.getAllUsers()\n      .then((response) => {\n        setAvailableUsers(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching users:', error);\n      });\n  }, []);\n\n  // Fetch available offers\n  useEffect(() => {\n    offerServiceApi.getAllOffers()\n      .then((response) => {\n        setAvailableOffers(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching offers:', error);\n      });\n  }, []);\n\n  const handleAssign = () => {\n    // Call the marketingServiceApi to assign offers to the selected user\n    marketingServiceApi.assignUserOffers(selectedUser, selectedOffers);\n    // Reset the form\n    setSelectedUser('');\n    setSelectedOffers([]);\n  };\n\n  return (\n    <div>\n      <h2>Marketing Assign:</h2>\n      <form>\n        <label>\n          Select User:\n          <input\n            type=\"text\"\n            value={selectedUser}\n            onChange={(e) => setSelectedUser(e.target.value)}\n            list=\"usersList\" // Connect input to the datalist\n          />\n          {/* Datalist for typeahead based on available users */}\n          <datalist id=\"usersList\">\n            {availableUsers.map((user) => (\n              <option key={user.id} value={'${user.firstname} ${user.lastname}'} />\n            ))}\n          </datalist>\n        </label>\n        <label>\n          Select Offers:\n          <select\n            multiple\n            value={selectedOffers}\n            onChange={(e) => setSelectedOffers(Array.from(e.target.selectedOptions, (option) => option.value))}\n          >\n            {availableOffers.map((offer) => (\n              <option key={offer.id} value={'${offer.name} ${offer.value}'}/>\n            ))}\n          </select>\n        </label>\n        <button type=\"button\" onClick={handleAssign}>\n          Assign Offers\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default MarketingAssign;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}